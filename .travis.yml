language: go
go:
 - 1.11.x
 - 1.12.x
 - master

dist: bionic

addons:
  apt:
    packages:
      libdpdk-dev
      libnuma-dev
    update: true

before_install:
  - sudo apt-get install -y libdpdk-dev libnuma-dev

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Force-enable Go modules. This will be unnecessary when Go 1.12 lands.
env:
  global:
    - GO111MODULE=on
  matrix:
    - CGO_CFLAGS="-m64 -pthread -O3 -march=native -I/usr/include/dpdk"
      CGO_LDFLAGS="-L/usr/lib/x86_64-linux-gnu -ldpdk -lz -lrt -lnuma -ldl -lm"

matrix:
  fast_finish: true
  allow_failures:
    - go: master

# You don't need to test on very old version of the Go compiler. It's the user's
# responsibility to keep their compilers up to date.
jobs:
  include:
    - go: 1.9.x
      install: ./.travis.install.sh
    - go: 1.10.x
      install: ./.travis.install.sh
    - stage: style
      name: "static/vet/lint"
      go: 1.x
      script:
        - ./.travis.static.sh
        - ./.travis.govet.sh
        - ./.travis.golint.sh

stages:
  - style
  - test

# Only clone the most recent commit.
git:
  depth: 1

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script: ./.travis.script.sh
